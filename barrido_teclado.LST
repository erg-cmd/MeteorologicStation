C51 COMPILER V9.50a   BARRIDO_TECLADO                                                      12/12/2012 13:56:50 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE BARRIDO_TECLADO
OBJECT MODULE PLACED IN barrido_teclado.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE barrido_teclado.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "libreria.h"
   2          
   3          // Teclado de 4x3
   4          
   5          // Columnas del Teclado
   6          sbit FILA_1 = P1^0;
   7          sbit FILA_2 = P1^1;
   8          sbit FILA_3 = P1^6;
   9          sbit FILA_4 = P1^5;
  10          
  11          // Filas del Teclado
  12          sbit COLUM_1 = P1^4;
  13          sbit COLUM_2 = P1^3;
  14          sbit COLUM_3 = P1^2;
  15          
  16          
  17          extern bit timer_2500us;        // definida en mdt.c
  18          extern U16 AUX[];                       //definida en mdt.c
  19          extern unsigned char tecla;     // definida en main.c
  20          
  21          /**     
  22           *      \fn  void ReboteTecla( void )
  23           *      \brief Elimina el rebote de un código de tecla
  24           *      \param void     
  25           *      \return void
  26          */
  27          
  28          void ReboteTecla( void ) {
  29   1              
  30   1              static unsigned char CodigoAnterior = NO_KEY ;
  31   1              static unsigned char EstadosEstables = 0 ;
  32   1              unsigned char CodigoActual ;
  33   1            
  34   1              CodigoActual = LecturaTecla4x3( );                              
  35   1              
  36   1      
  37   1              if( CodigoActual == NO_KEY ) {  //!< No se pulso tecla o rebote
  38   2                      CodigoAnterior = NO_KEY ;
  39   2                      EstadosEstables = 0 ;
  40   2                      return ;
  41   2              }
  42   1      
  43   1              if( EstadosEstables == 0 )      {  //!< Primera vez
  44   2                      CodigoAnterior = CodigoActual ;
  45   2                      EstadosEstables = 1 ;
  46   2                      return ;
  47   2              }
  48   1      
  49   1              if( EstadosEstables == CANTIDADdErEBOTES )      {       //!< Acepto la tecla
  50   2                      EstadosEstables = CANTIDADdErEBOTES + 1;        //!< Hará que no vuelva a entrar hasta que suelten la tecla
  51   2                      tecla = CodigoAnterior ;        
  52   2                      return ;
  53   2              }
  54   1              
  55   1              if( EstadosEstables > CANTIDADdErEBOTES )               //!< La tecla sigue pulsada
C51 COMPILER V9.50a   BARRIDO_TECLADO                                                      12/12/2012 13:56:50 PAGE 2   

  56   1                      return ;
  57   1      
  58   1              if( CodigoActual == CodigoAnterior )
  59   1                      EstadosEstables ++ ;
  60   1              else
  61   1                      EstadosEstables = 0 ;   
  62   1              return ;
  63   1      }
  64          
  65          
  66          
  67          /**     
  68           *      \fn  unsigned char  LecturaTecla4x3 ( void )
  69           *      \brief Lectura del codigo de tecla con rebote de un teclado de 4 x 3
  70           *      \param void     
  71           *      \return unsigned char : Tecla ó NO_KEY si no se pulso tecla  
  72          */      
  73          
  74          unsigned char  LecturaTecla4x3( void ) 
  75          {
  76   1              
  77   1       //Barro Fila 1
  78   1               
  79   1               FILA_1 = 0;
  80   1               FILA_2 = 1;
  81   1               FILA_3 = 1;
  82   1               FILA_4 = 1;
  83   1      
  84   1                if(!COLUM_1) return  1;
  85   1                if(!COLUM_2) return  2;
  86   1                if(!COLUM_3) return  3;
  87   1      
  88   1      //Barro Fila 2
  89   1               FILA_1 = 1;
  90   1               FILA_2 = 0;
  91   1               FILA_3 = 1;
  92   1               FILA_4 = 1;
  93   1      
  94   1                if(!COLUM_1) return  4;
  95   1                if(!COLUM_2) return  5;
  96   1                if(!COLUM_3) return  6;       
  97   1      
  98   1      
  99   1      //Barro Fila 3
 100   1               FILA_1 = 1;
 101   1               FILA_2 = 1;
 102   1               FILA_3 = 0;
 103   1               FILA_4 = 1;
 104   1      
 105   1               if(!COLUM_1) return  7;
 106   1               if(!COLUM_2) return  8;
 107   1               if(!COLUM_3) return  9;
 108   1      
 109   1      //Barro Fila 4
 110   1               FILA_1 = 1;
 111   1               FILA_2 = 1;
 112   1               FILA_3 = 1;
 113   1               FILA_4 = 0;
 114   1      
 115   1               if(!COLUM_1) return  10;
 116   1               if(!COLUM_2) return  0;
 117   1               if(!COLUM_3) return  11;
C51 COMPILER V9.50a   BARRIDO_TECLADO                                                      12/12/2012 13:56:50 PAGE 3   

 118   1      
 119   1                //Si no se presiono ninguna tecla.
 120   1                return NO_KEY;
 121   1      }
 122          
 123          unsigned char Teclado ()
 124          {
 125   1         unsigned char Tecla;
 126   1               Tecla = tecla;
 127   1               tecla = NO_KEY;
 128   1               return Tecla;
 129   1      
 130   1      }
 131          
 132          void actualizar_teclado ()
 133          {
 134   1       if(timer_2500us == OFF){ReboteTecla();timer_2500us_on;}//!< actualiza el valor de tecla cada 2.5ms
 135   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    179    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
